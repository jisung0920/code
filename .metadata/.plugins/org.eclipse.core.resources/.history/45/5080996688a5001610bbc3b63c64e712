package queue;


public class Queue_prob {
	private Node front;
	private Node back;
	
	private class Node{
		private int data;
		private Node next;
		Node(int data){
			this.data = data;
		}
	}
	public Queue_prob() {
		front = null;
		back = null;
		back.next=front;
	}

	public void enqueue(int data){
		Node nNode = new Node(data);
		nNode.next = back;
		back = nNode;
	}

	public Node dequeue(){
		
		if(isEmpty()){
			System.out.println("queue is Empty");
			return null;
		}
		
		Node tmp = front;
		Node cur = back;
		
		while(cur.next != front){
			cur = cur.next;
		}
		
		front = cur;
		
		return tmp;
	}

	public void printQueue(){
		Node cur =back;
		while(cur.next != front){
			System.out.print('['+cur.data+"] ");
			cur = cur.next;			
		}
		System.out.println();
		
	}

	public boolean isEmpty(){
		if(front == null){
			return true;
		} else {
			return false;
		}
	}

}
