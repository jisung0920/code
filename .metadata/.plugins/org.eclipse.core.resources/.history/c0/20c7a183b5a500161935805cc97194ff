package queue;


public class Queue_prob {
	private Node front;
	private Node back;
	
	private class Node{
		private int data;
		private Node next;
		Node(int data){
			this.data = data;
		}
	}
	public Queue_prob() {
		front =null;
		back = null;

	}

	public void enqueue(int data){
		Node nNode = new Node(data);
		if(isEmpty()){
			front = nNode;
			front.next = back;
			
		}
		back.next = nNode;
		back=nNode;
	}

	public Node dequeue(){
		Node deNode = front;
		front=front.next;
		return deNode;
	}

	public void printQueue(){
		if(isEmpty()){
			return;
		}
		Node cur = front;
		while(cur.next!=null){
			System.out.print('['+cur.data+']');
			cur=cur.next;
		}
		System.out.println();
	}

	public boolean isEmpty(){
		if(front == null){
			return true;
		} else {
			return false;
		}
	}

}
